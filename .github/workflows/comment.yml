name: Label & comment issues and PRs

on:
  issues:
    types:
      - reopened
      - opened
      - closed
  pull_request:
    types:
      - opened

jobs:
  label_issues:
    if: github.event_name == 'issues' && (github.event.action == 'opened' || github.event.action == 'reopened')
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Attach label to issues
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["issue", "fix"]
            })

      - name: Comment on new or reopened issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            Thanks for opening this issue! We'll take a look as soon as possible.

  comment_on_closed_issue:
    if: github.event_name == 'issues' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Comment on closed issue
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            This issue has been closed. If you believe it was closed in error, feel free to reopen or create a new one. Thank you!

  comment_on_first_pr:
    if: github.event_name == 'pull_request' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Check if this is the user's first PR
        id: check-pr
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pulls } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            });

            const user = context.payload.pull_request.user.login;
            const isFirstPR = !pulls.some(pr => pr.user.login === user && pr.number !== context.payload.pull_request.number);

            return isFirstPR;
          result-encoding: string

      - name: Comment on first PR
        if: steps.check-pr.outputs.result == 'true' || steps.check-pr-output.result == 'false'
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Congrats on opening your first pull request! We appreciate your contribution. A maintainer will review it soon.
